.data
.text
main:

    addi    r1,     r0, 1   ; adds 1 to content of register 0 (=0) and writes to r1
    addi    r2,     r0, 8   ; similar instruction, writing 8 to R2
    ; since r0 is always 0, constants can be generated by immediate instructions

    add     r5,     r1, r2  ; r5 = 9
    sub     r6,     r2, r1  ; r6 = 7
    mult    r5,     r6
    mflo    r7              ; r7 = 63
    div     r7,     r6
    mflo    r8              ; r8 = 9
    and     r9,     r5, r6  ; r9 = 9 AND 7 = 1001 AND 0111 = 0001 = 1
    or      r10,    r5, r6  ; r10 = 9 OR 7 = 1001 OR  0111 = 1111 = 15
    xor     r11,    r5, r6  ; r11 = 9 XOR 7 = 1001 XOR  0111 = 1110 = 14
    sll     r12,    r6, 2   ; r12 = 0111 << 2 = 011100 = 28
    ; shift left, complies with a multiplication of 2^(operand)
    trap    0
